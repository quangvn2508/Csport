name: CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'

jobs:
  build-react:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
      - uses: actions/setup-node@v1
        with:
          node-version: 12 
      - name: install dependencies
        run: npm ci
        working-directory: frontend
        
      - name: build project
        run: npm run build
        working-directory: frontend

  build-flask:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
        working-directory: backend

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        working-directory: backend

      # - name: Test with pytest
      #   run: pytest
      #   working-directory: backend
  deploy:
    runs-on: ubuntu-latest
    needs: [ build-react, build-flask ]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: deployment
        uses: fifsky/ssh-action@master
        with:
          command: |
            tmux kill-session -t react;
            tmux kill-session -t flask;
            cd ~/Csport;
            git reset --hard;
            git pull;
            cd frontend;
            npm ci;
            tmux new -d -s react;
            tmux send-keys -t react "npm start" ENTER;
            cd ../backend;
            source env/bin/activate;
            pip install -r requirements.txt;
            tmux new -d -s flask;
            tmux send-keys -t flask "sudo -i" ENTER;
            tmux send-keys -t flask "cd /home/ubuntu/Csport/backend;source env/bin/activate;python app.py" ENTER;
          host: ${{ secrets.HOST }}
          user: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}